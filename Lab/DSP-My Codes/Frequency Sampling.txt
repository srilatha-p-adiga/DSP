% FIR Filter Design Using Frequency Sampling Technique

loop=1;
while (loop==1)
   clear all;
   clc;
   disp('  ');
   disp('FIR Filter Design Using Frequency Sampling Technique');
   disp('Specification - Time Domain (Impulse Response)');
   disp(' ')
   h=input('Enter Desired Impulse Response "h(n)" of the FIR filter = ');
   N=length(h);
   Hk=fft(h,N)
   Hmag=abs(Hk)
   Hphase=phase(Hk)
   disp('Press a Key to Continue...');
   pause
   b0=Hk(1);
   a0=[1,-1];
   H0=tf(b0,a0)
   disp('Press a Key to Continue...');
   pause
   Hz=H0;
   if mod(N,2)==0
       for k=1:(N/2-1);
           b=2*Hmag(k+1)*[cos(Hphase(k+1)),-cos(Hphase(k+1)-(2*pi*k/N))];
           a=[1,-2*cos(2*pi*k/N),1];
           H(k)=tf(b,a)
           disp('Press a Key to Continue...');
           pause
           Hz=Hz+H(k)
           disp('Press a Key to Continue...');
           pause
       end
       bnby2=Hk((N/2)+1);
       anby2=[1,1];
       Hnby2=tf(bnby2,anby2)
       disp('Press a Key to Continue...');
       pause
       Hz=Hz+Hnby2
       disp('Press a Key to Continue...');
       pause
   else
       for k=1:(N-1)/2;
           b=2*Hmag(k+1)*[cos(Hphase(k+1)),-cos(Hphase(k+1)-(2*pi*k/N))];
           a=[1,-2*cos(2*pi*k/N),1];
           H(k)=tf(b,a)
           disp('Press a Key to Continue...');
           pause
           Hz=Hz+H(k)
           disp('Press a Key to Continue...');
           pause
       end
   end
   
   bc=[1,zeros(1,N-1),-1];
   ac=N;
   HC=tf(bc,ac)
   disp('Press a Key to Continue...');
   pause
   
   HT=HC*Hz
   disp('Press a Key to Continue...');
   pause
   
   [BZ,AZ]=tfdata(HT,'v')
%   disp(BZ)
%   disp(AZ)
   K=length(AZ)
   lp=1;
   while (lp==1)
        AK=[];
        for i=1:K;
%            AZ(i)
            if AZ(i)==0;
                AK=AZ(i+1:K)
                disp('Press a Key to Continue...');
                pause
            else
                lp=0;
            end
        end
   end
   AK
   impz(BZ,AK)
           
   disp('  ');
   choice=input('DO YOU WANT TO CONTINUE WITH THE DESIGN...?(Y)= ','s');
   switch upper(choice)
   case 'Y',
      loop=1;
   otherwise
      loop=0;
   end
end































% frequency sampling design of linear phase FIR filter

N = 64;                         % FFT length = filter length
np = floor(N/2) + 1;            % number of independent frequency points
n = 0:np-1;
w = n*2*pi/N;                   % frequency vector
M = sin(n*pi/(np-1));           % some desired magnitude response
D = M.*exp(-1i*(N-1)/2*w);      % desired complex frequency response (linear phase)
D = [D,conj(D(N-np+1:-1:2))];   % append redundant points for IFFT
h = ifft(D);                    % compute impulse response
max(abs(imag(h)))               % should be very close to 0
h = real(h);                    % remove numerical inaccuracies

% check result
[H,w2] = freqz(h,1,4*N);
plot(w/2/pi,abs(D(1:np)),'.',w2/2/pi,abs(H))



% Implemetation of Frequency Sampled Transfer Function
% 

b1=[4.5];
a1=[1 -1];
H1 = tf(b1,a1)

%Transfer function H1:
% 4.5
%-----
%s - 1

b2=[.809,-.809];
a2=[1,-.618,1];
H2=tf(b2,a2) 
%Transfer function H2:
% 0.809 s - 0.809
%-----------------
%s^2 - 0.618 s + 1
 
b3=[-.309,.309];
a3=[1,1.618,1];
H3=tf(b3,a3) 
%Transfer function H3:
%-0.309 s + 0.309
%-----------------
%s^2 + 1.618 s + 1
 
H4=H1+H2+H3 
%Transfer function H4:
%                 5 s^4 + 5 s^3 + 2.5 s^2 + 5 s + 5
%-------------------------------------------------------------------
%s^5 + 2.22e-016 s^4 + 7.6e-005 s^3 - 7.6e-005 s^2 - 2.22e-016 s - 1
 
b5=[1,0,0,0,0,-1];
a5=5;
H5=tf(b5,a5)
%Transfer function H5:
%s^5 - 1
%-------
%   5
 
H=H5*H4
%Transfer function H=H5*(H1+H2+H3+H4):
%5 s^9 + 5 s^8 + 2.5 s^7 + 5 s^6 + 5 s^5 - 5 s^4 - 5 s^3 - 2.5 s^2 - 5 s - 5
%---------------------------------------------------------------------------
%    5 s^5 + 1.11e-015 s^4 + 0.00038 s^3 - 0.00038 s^2 - 1.11e-015 s - 5

b=[5,5,2.5,5,5,-5,-5,-2.5,-5,-5];
a=[5,1.11*10^-015,.00038,-.00038,-1.11*10^-015,-5];
figure(1)
impz(b,a)

[BZ,AZ]=tfdata(H,'v')
%disp(BZ)
%disp(AZ)
N=length(AZ)
loop=1;
while (loop==1)
    AK=[]
    for i=1:N;
        if AZ(i)==0;
            AK=AZ(i+1:N);
        end
    end
    loop=0;
end
AK
figure(2)
impz(BZ,AK)
            

% Implemetation of Frequency Sampled Transfer Function
% 

b1=[3];
a1=[1 -1];
H1 = tf(b1,a1)

%Transfer function H1:
% 4.5
%-----
%s - 1

b2=2*2.707*[1,-.707];
a2=[1,-1.414,1];
H2=tf(b2,a2) 
%Transfer function H2:
% 0.809 s - 0.809
%-----------------
%s^2 - 0.618 s + 1
 
b3=2*2*[1];
a3=[1,0,1];
H3=tf(b3,a3) 
%Transfer function H3:
%-0.309 s + 0.309
%-----------------
%s^2 + 1.618 s + 1

b4=2*1.293*[1,0.707];
a4=[1,1.414,1]
H4=tf(b4,a4)

b5=[1];
a5=[1,1];
H5=tf(b5,a5)

H6=H1+H2+H3+H4+H5
%Transfer function H4:
%                 5 s^4 + 5 s^3 + 2.5 s^2 + 5 s + 5
%-------------------------------------------------------------------
%s^5 + 2.22e-016 s^4 + 7.6e-005 s^3 - 7.6e-005 s^2 - 2.22e-016 s - 1
 
b7=[1,0,0,0,0,0,0,0,-1];
a7=8;
H7=tf(b7,a7)
%Transfer function H5:
%s^5 - 1
%-------
%   5
 
H=H7*H6
%Transfer function H=H5*(H1+H2+H3+H4):
%5 s^9 + 5 s^8 + 2.5 s^7 + 5 s^6 + 5 s^5 - 5 s^4 - 5 s^3 - 2.5 s^2 - 5 s - 5
%---------------------------------------------------------------------------
%    5 s^5 + 1.11e-015 s^4 + 0.00038 s^3 - 0.00038 s^2 - 1.11e-015 s - 5

b=[12,8,4,-4,-4,4,4,-.000604,-12,-8,-4,4,4,-4,-4,.000604];
a=[8,0,.004832,0,0,0,-.004832,0,-8];
figure(1)
impz(b,a)

[BZ,AZ]=tfdata(H,'v')
%disp(BZ)
%disp(AZ)
N=length(AZ)
loop=1;
while (loop==1)
    AK=[]
    for i=1:N;
        if AZ(i)==0;
            AK=AZ(i+1:N);
        end
    end
    loop=0;
end
AK
figure(2)
impz(BZ,AK)
            
